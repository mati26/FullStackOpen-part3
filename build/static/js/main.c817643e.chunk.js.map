{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","value","onClick","event","window","confirm","target","id","Persons","persons","map","key","PersonForm","onNameChange","onNumberChange","submitNewPerson","onChange","type","Filter","handler","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notificationMessage","setNotificationMessage","setType","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","includes","preventDefault","existingPerson","find","newPerson","updatedPerson","catch","error","returnedPerson","concat","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c817643e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n\r\n  const handleDelete = (event) => {\r\n    if (window.confirm(`Delete ${event.target.value} ?`)) {\r\n      deletePerson(person.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        {person.name} {person.number}\r\n        <button value={person.name} onClick={handleDelete}>delete</button>\r\n      </div>\r\n  );\r\n};\r\n\r\nconst Persons = ({persons, deletePerson}) => {\r\n  return (\r\n      <div>{persons.map(person => <Person key={person.name} person={person} deletePerson={deletePerson}/>)}</div>\r\n  );\r\n};\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\nconst PersonForm = ({name, number, onNameChange, onNumberChange, submitNewPerson}) => {\r\n  return (\r\n      <form>\r\n        <div>name: <input value={name} onChange={onNameChange}/></div>\r\n        <div>number: <input value={number} onChange={onNumberChange}/></div>\r\n        <div>\r\n          <button value={name} onClick={submitNewPerson} type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm","import React from 'react';\r\n\r\nconst Filter = ({handler}) => {\r\n  return (\r\n      <div>filter shown with<input onChange={handler}/></div>\r\n  );\r\n};\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Notification = ({message, type}) => {\r\n  const notificationStyle = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n  const errorStyle = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  if (type === 'error') {\r\n    return (\r\n        <div style={errorStyle}>\r\n          {message}\r\n        </div>\r\n    );\r\n  } else {\r\n    return (\r\n        <div style={notificationStyle}>\r\n          {message}\r\n        </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Notification;","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data)\r\n};\r\n\r\nconst createPerson = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data)\r\n};\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data)\r\n};\r\n\r\nconst updatePerson = (id,person) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, person);\r\n  return request.then(response => response.data)\r\n};\r\n\r\nexport default {getAll, createPerson, deletePerson, updatePerson};","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport personService from './services/persons';\n\nconst App = () => {\n      const [persons, setPersons] = useState([]);\n      const [newName, setNewName] = useState('');\n      const [newNumber, setNewNumber] = useState('');\n      const [newFilter, setNewFilter] = useState('');\n      const [notificationMessage, setNotificationMessage] = useState(null);\n      const [type, setType] = useState(null);\n\n      useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n              setPersons(initialPersons);\n            });\n      }, []);\n\n      const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()));\n\n      const addPerson = (event) => {\n            event.preventDefault();\n            const existingPerson = persons.find(person => person.name === newName);\n\n            const newPerson = {\n              name: newName,\n              number: newNumber,\n            };\n            if (typeof existingPerson !== 'undefined') {\n              if (window.confirm(\n                  `${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                personService.updatePerson(existingPerson.id, newPerson).then(updatedPerson => {\n                      setPersons(persons.map(person => person.id !== existingPerson.id ? person : updatedPerson));\n                      setNotificationMessage(`Changed number of ${newName}`);\n                    },\n                ).catch(error => {\n                  setNotificationMessage(`Information of ${newName} has already been removed from server`);\n                  setPersons(persons.filter(person => person.name !== newName));\n                  setType('error');\n                });\n\n              }\n            } else {\n              personService\n                  .createPerson(newPerson)\n                  .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson));\n                    setNotificationMessage(`Added ${returnedPerson.name}`);\n                  })\n                  .catch(error => {\n                    setNotificationMessage(error.response.data.error);\n                    setType('error');\n                  });\n\n            }\n            setNewName('');\n            setNewNumber('');\n            setTimeout(() => {\n              setNotificationMessage(null);\n              setType(null);\n            }, 5000);\n          }\n      ;\n\n      const deletePerson = id => {\n        personService\n            .deletePerson(id)\n            .then(\n                setPersons(persons.filter(person => person.id !== id)),\n            );\n      };\n\n      const handleNameChange = (event) => {\n        setNewName(event.target.value);\n      };\n\n      const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n      };\n\n      const searchFilterChange = (event) => {\n        setNewFilter(event.target.value);\n      };\n\n      return (\n          <div>\n            <h2>Phonebook</h2>\n            <Notification message={notificationMessage} type={type}/>\n            <Filter handler={searchFilterChange}/>\n            <h3>Add a new</h3>\n            <PersonForm name={newName} number={newNumber} onNameChange={handleNameChange}\n                        onNumberChange={handleNumberChange} submitNewPerson={addPerson}/>\n            <h3>Numbers</h3>\n            <Persons persons={personsToShow} deletePerson={deletePerson}/>\n          </div>\n      );\n    }\n;\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}